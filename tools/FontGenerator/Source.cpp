#include <iostream>
#include <cctype>
#include <fstream>

#define MAX_LEN 9000

char ABC[][8][26] =
{
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 0, 1, 1, 1, 1, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 1, 1, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 1, 1, 1, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 1, 1, 1, 0, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 0, 1, 1, 1, 1, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 0, 1, 1, 1, 1, 0, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 1, 1, 1, 0, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 1, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 0, 1, 1, 1, 1, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 1, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 0, 1, 1, 1, 1, 0, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 1, 1, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 1, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 1, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 1, 0, ",
		"0, 0, 0, 0, 1, 1, 0, 0, ",
		"0, 0, 0, 0, 1, 1, 0, 0, ",
		"0, 0, 0, 0, 1, 1, 0, 0, ",
		"0, 0, 0, 0, 1, 1, 0, 0, ",
		"0, 1, 0, 0, 1, 1, 0, 0, ",
		"0, 0, 1, 1, 1, 0, 0, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 1, 1, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 1, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 1, 0, ",
		"0, 1, 1, 1, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 1, 0, 1, 0, ",
		"0, 1, 1, 0, 0, 0, 1, 0, ",
		"0, 1, 1, 0, 0, 0, 1, 0, ",
		"0, 1, 1, 0, 0, 0, 1, 0, ",
		"0, 1, 1, 0, 0, 0, 1, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 1, 0, 1, 1, 0, ",
		"0, 1, 1, 1, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 1, 1, 1, 0, ",
		"0, 1, 1, 0, 1, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 0, 1, 1, 1, 1, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 0, 1, 1, 1, 1, 0, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 1, 1, 1, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 0, 1, 1, 1, 1, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 1, 1, 1, 0, ",
		"0, 1, 1, 0, 1, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 1, ",
		"0, 0, 1, 1, 1, 1, 0, 1, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 1, 1, 1, 0, 0, ",
		"0, 1, 1, 1, 1, 0, 0, 0, ",
		"0, 1, 1, 0, 1, 1, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, "

	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 0, 1, 1, 1, 1, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 0, 1, 1, 1, 1, 0, 0, ",
		"0, 0, 0, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 0, 1, 1, 1, 1, 0, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 1, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 0, 1, 1, 1, 1, 0, 0, "

	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 0, 1, 1, 1, 1, 0, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, "

	},
	{
		"0, error W, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 1, 1, 1, 1, 0, ",
		"0, 1, 1, 2, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 1  0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 0, 1, 1, 1, 1, 0, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 1, 1, 0, 0, 1, 1, 0, ",
		"0, 0, 1, 1, 1, 1, 0, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, ",
		"0, 0, 0, 1, 1, 0, 0, 0, "
	},
	{
		"0, 0, 0, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 1, 0, ",
		"0, 0, 0, 0, 0, 1, 1, 0, ",
		"0, 0, 0, 0, 0, 1, 1, 0, ",
		"0, 0, 0, 0, 1, 1, 0, 0, ",
		"0, 0, 1, 1, 0, 0, 0, 0, ",
		"0, 1, 1, 0, 0, 0, 0, 0, ",
		"0, 1, 1, 1, 1, 1, 1, 0, "
	}
};

const char digits[10][8][25] = {
  {
	"0, 0, 0, 0, 0, 0, 0, 0, ",
	"0, 0, 1, 1, 1, 1, 0, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 1, 1, 0, 1, 1, 1, 0, ",
	"0, 1, 1, 1, 0, 1, 1, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 0, 1, 1, 1, 1, 0, 0, "
  },
  {
	"0, 0, 0, 0, 0, 0, 0, 0, ",
	"0, 0, 0, 1, 1, 0, 0, 0, ",
	"0, 0, 0, 1, 1, 0, 0, 0, ",
	"0, 0, 1, 1, 1, 0, 0, 0, ",
	"0, 0, 0, 1, 1, 0, 0, 0, ",
	"0, 0, 0, 1, 1, 0, 0, 0, ",
	"0, 0, 0, 1, 1, 0, 0, 0, ",
	"0, 1, 1, 1, 1, 1, 1, 0, "
  },
  {
	"0, 0, 0, 0, 0, 0, 0, 0, ",
	"0, 0, 1, 1, 1, 1, 0, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 0, 0, 0, 0, 1, 1, 0, ",
	"0, 0, 0, 0, 1, 1, 0, 0, ",
	"0, 0, 1, 1, 0, 0, 0, 0, ",
	"0, 1, 1, 0, 0, 0, 0, 0, ",
	"0, 1, 1, 1, 1, 1, 1, 0, "
  },
  {
	"0, 0, 0, 0, 0, 0, 0, 0, ",
	"0, 0, 1, 1, 1, 1, 0, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 0, 0, 0, 0, 1, 1, 0, ",
	"0, 0, 0, 1, 1, 1, 0, 0, ",
	"0, 0, 0, 0, 0, 1, 1, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 0, 1, 1, 1, 1, 0, 0, "
  },
  {
	"0, 0, 0, 0, 0, 0, 0, 0, ",
	"0, 0, 0, 0, 1, 1, 0, 0, ",
	"0, 0, 0, 1, 1, 1, 0, 0, ",
	"0, 0, 1, 0, 1, 1, 0, 0, ",
	"0, 1, 0, 0, 1, 1, 0, 0, ",
	"0, 1, 1, 1, 1, 1, 1, 0, ",
	"0, 0, 0, 0, 1, 1, 0, 0, ",
	"0, 0, 0, 0, 1, 1, 0, 0, "
  },
  {
	"0, 0, 0, 0, 0, 0, 0, 0, ",
	"0, 1, 1, 1, 1, 1, 1, 0, ",
	"0, 1, 1, 0, 0, 0, 0, 0, ",
	"0, 1, 1, 1, 1, 1, 0, 0, ",
	"0, 0, 0, 0, 0, 1, 1, 0, ",
	"0, 0, 0, 0, 0, 1, 1, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 0, 1, 1, 1, 1, 0, 0, "
  },
  {
	"0, 0, 0, 0, 0, 0, 0, 0, ",
	"0, 0, 1, 1, 1, 1, 0, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 1, 1, 0, 0, 0, 0, 0, ",
	"0, 1, 1, 1, 1, 1, 0, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 0, 1, 1, 1, 1, 0, 0, "
  },
  {
	"0, 0, 0, 0, 0, 0, 0, 0, ",
	"0, 1, 1, 1, 1, 1, 1, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 0, 0, 0, 1, 1, 0, 0, ",
	"0, 0, 0, 0, 1, 1, 0, 0, ",
	"0, 0, 0, 1, 1, 0, 0, 0, ",
	"0, 0, 0, 1, 1, 0, 0, 0, ",
	"0, 0, 0, 1, 1, 0, 0, 0, "
  },
  {
	"0, 0, 0, 0, 0, 0, 0, 0, ",
	"0, 0, 1, 1, 1, 1, 0, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 0, 1, 1, 1, 1, 0, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 0, 1, 1, 1, 1, 0, 0, "
  },
  {
	"0, 0, 0, 0, 0, 0, 0, 0, ",
	"0, 0, 1, 1, 1, 1, 0, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 0, 1, 1, 1, 1, 1, 0, ",
	"0, 0, 0, 0, 0, 1, 1, 0, ",
	"0, 1, 1, 0, 0, 1, 1, 0, ",
	"0, 0, 1, 1, 1, 1, 0, 0, "
  }
};

using namespace std;


int main()
{
	char t;
	char* line1 = new char[MAX_LEN + 1];
	char* line2 = new char[MAX_LEN + 1];
	char* line3 = new char[MAX_LEN + 1];
	char* line4 = new char[MAX_LEN + 1];
	char* line5 = new char[MAX_LEN + 1];
	char* line6 = new char[MAX_LEN + 1];
	char* line7 = new char[MAX_LEN + 1];
	char* line8 = new char[MAX_LEN + 1];
	line1[0] = '{';
	line2[0] = '{';
	line3[0] = '{';
	line4[0] = '{';
	line5[0] = '{';
	line6[0] = '{';
	line7[0] = '{';
	line8[0] = '{';
	line1[1] = '\0';
	line2[1] = '\0';
	line3[1] = '\0';
	line4[1] = '\0';
	line5[1] = '\0';
	line6[1] = '\0';
	line7[1] = '\0';
	line8[1] = '\0';

	int size = 0;

	char* name = new char[100];
	std::cout << "Enter array name: ";
	cin >> name;
	getchar();
	std::cout << "Enter text:" << endl;
	
	do
	{
		t = getchar();
		t = toupper(t);

		if (isalpha(t))
		{
			if (t == 'M')
			{
				size += 9;
				strcat_s(line1, MAX_LEN, "0, 0, 0, 0, 0, 0, 0, 0, 0, ");
				strcat_s(line2, MAX_LEN, "0, 1, 1, 0, 0, 0, 1, 1, 0, ");
				strcat_s(line3, MAX_LEN, "0, 1, 1, 1, 0, 1, 1, 1, 0, ");
				strcat_s(line4, MAX_LEN, "0, 1, 1, 1, 1, 1, 1, 1, 0, ");
				strcat_s(line5, MAX_LEN, "0, 1, 1, 0, 1, 0, 1, 1, 0, ");
				strcat_s(line6, MAX_LEN, "0, 1, 1, 0, 0, 0, 1, 1, 0, ");
				strcat_s(line7, MAX_LEN, "0, 1, 1, 0, 0, 0, 1, 1, 0, ");
				strcat_s(line8, MAX_LEN, "0, 1, 1, 0, 0, 0, 1, 1, 0, ");
			}
			else if (t == 'W')
			{
				size += 12;
				strcat_s(line1, MAX_LEN, "0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ");
				strcat_s(line2, MAX_LEN, "0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, ");
				strcat_s(line3, MAX_LEN, "0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, ");
				strcat_s(line4, MAX_LEN, "0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, ");
				strcat_s(line5, MAX_LEN, "0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, ");
				strcat_s(line6, MAX_LEN, "0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, ");
				strcat_s(line7, MAX_LEN, "0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, ");
				strcat_s(line8, MAX_LEN, "0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, ");
			}
			else
			{
				size += 8;
				strcat_s(line1, MAX_LEN, ABC[t - 'A'][0]);
				strcat_s(line2, MAX_LEN, ABC[t - 'A'][1]);
				strcat_s(line3, MAX_LEN, ABC[t - 'A'][2]);
				strcat_s(line4, MAX_LEN, ABC[t - 'A'][3]);
				strcat_s(line5, MAX_LEN, ABC[t - 'A'][4]);
				strcat_s(line6, MAX_LEN, ABC[t - 'A'][5]);
				strcat_s(line7, MAX_LEN, ABC[t - 'A'][6]);
				strcat_s(line8, MAX_LEN, ABC[t - 'A'][7]);
			}
		}
		else if (isdigit(t))
		{
			size += 8;
			strcat_s(line1, MAX_LEN, digits[t - '0'][0]);
			strcat_s(line2, MAX_LEN, digits[t - '0'][1]);
			strcat_s(line3, MAX_LEN, digits[t - '0'][2]);
			strcat_s(line4, MAX_LEN, digits[t - '0'][3]);
			strcat_s(line5, MAX_LEN, digits[t - '0'][4]);
			strcat_s(line6, MAX_LEN, digits[t - '0'][5]);
			strcat_s(line7, MAX_LEN, digits[t - '0'][6]);
			strcat_s(line8, MAX_LEN, digits[t - '0'][7]);
		}
		else if (t == ' ' || t == '_')
		{
			size += 3;
			strcat_s(line1, MAX_LEN, "0, 0, 0, ");
			strcat_s(line2, MAX_LEN, "0, 0, 0, ");
			strcat_s(line3, MAX_LEN, "0, 0, 0, ");
			strcat_s(line4, MAX_LEN, "0, 0, 0, ");
			strcat_s(line5, MAX_LEN, "0, 0, 0,");
			strcat_s(line6, MAX_LEN, "0, 0, 0, ");
			strcat_s(line7, MAX_LEN, "0, 0, 0, ");
			strcat_s(line8, MAX_LEN, "0, 0, 0, ");
		}
		else if (t == '!')
		{
			size += 5;
			strcat_s(line1, MAX_LEN, "0, 0, 0, 0, 0, ");
			strcat_s(line2, MAX_LEN, "0, 1, 1, 0, 0, ");
			strcat_s(line3, MAX_LEN, "0, 1, 1, 0, 0, ");
			strcat_s(line4, MAX_LEN, "0, 1, 1, 0, 0, ");
			strcat_s(line5, MAX_LEN, "0, 1, 1, 0, 0, ");
			strcat_s(line6, MAX_LEN, "0, 1, 1, 0, 0, ");
			strcat_s(line7, MAX_LEN, "0, 0, 0, 0, 0, ");
			strcat_s(line8, MAX_LEN, "0, 1, 1, 0, 0, ");
		}
		else if (t == ':')
		{
			size += 4;
			strcat_s(line1, MAX_LEN, "0, 0, 0, 0, ");
			strcat_s(line2, MAX_LEN, "0, 0, 0, 0, ");
			strcat_s(line3, MAX_LEN, "0, 1, 1, 0, ");
			strcat_s(line4, MAX_LEN, "0, 1, 1, 0, ");
			strcat_s(line5, MAX_LEN, "0, 0, 0, 0, ");
			strcat_s(line6, MAX_LEN, "0, 1, 1, 0, ");
			strcat_s(line7, MAX_LEN, "0, 1, 1, 0, ");
			strcat_s(line8, MAX_LEN, "0, 0, 0, 0, ");
		}
		else
			break;
	}
	while (t != '\0' && t != '\n' && t != '-');

	int len = strlen(line1);
	line1[len - 2] = '}';
	line1[len - 1] = ',';
	line1[len] = '\0';
	line2[len - 2] = '}';
	line2[len - 1] = ',';
	line2[len] = '\0';
	line3[len - 2] = '}';
	line3[len - 1] = ',';
	line3[len] = '\0';
	line4[len - 2] = '}';
	line4[len - 1] = ',';
	line4[len] = '\0';
	line5[len - 2] = '}';
	line5[len - 1] = ',';
	line5[len] = '\0';
	line6[len - 2] = '}';
	line6[len - 1] = ',';
	line6[len] = '\0';
	line7[len - 2] = '}';
	line7[len - 1] = ',';
	line7[len] = '\0';
	line8[len - 2] = '}';
	line8[len - 1] = '\0';

	ofstream file("D:\\array.txt");

	if (!file.is_open())
		return -1;
	
	file << "const PROGMEM bool " << name << "[8][" << size << "] = " << endl << "{" << endl;
	
	file << "\t" << line1 << endl << "\t" << line2 << endl << "\t" <<  line3 << endl << "\t" << line4 << endl << "\t" << line5 << endl << "\t" << line6 << endl << "\t" << line7 << endl << "\t" << line8
		<< endl << "}";
	
	file.close();
	
	delete[] line1;
	delete[] line2;
	delete[] line3;
	delete[] line4;
	delete[] line6;
	delete[] line7;
	delete[] line8;
	delete[] name;
}